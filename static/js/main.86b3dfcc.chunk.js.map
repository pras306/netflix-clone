{"version":3,"sources":["api/requests.js","components/Modal/Modal.js","components/Banner/Banner.js","components/Row/Row.js","containers/App.js","index.js"],"names":["TMDB_BASE_URL","YOUTUBE_BASE_URL","TMDB_REQUESTS","Modal","video","open","onClose","videoSrc","id","videoId","ReactDOM","createPortal","className","onClick","title","src","frameBorder","document","querySelector","Banner","fetchURL","useState","movie","setMovies","poster","setPoster","trailer","setTrailer","isOpen","setIsOpen","useEffect","a","axios","get","response","selMovie","data","Math","floor","random","length","backdrop_path","fetchData","handleClick","term","name","original_name","style","backgroundSize","backgroundImage","backgroundPosition","overview","Row","isLargeRow","movies","ref","useRef","scroll","offset","current","scrollLeft","onVideoSearch","renderMovieTiles","map","poster_path","alt","App","height","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.86b3dfcc.chunk.js","sourcesContent":["export const TMDB_BASE_URL =  process.env.NODE_ENV === \"production\" ? \"https://backend-portfolio-proxy.herokuapp.com/api/v1/movies\" : \"http://localhost:5000/api/v1/movies\";\r\n\r\nexport const YOUTUBE_BASE_URL = process.env.NODE_ENV === \"production\" ? \"https://backend-portfolio-proxy.herokuapp.com/api/v1/videos/search\" : \"http://localhost:5000/api/v1/videos/search\";\r\n\r\nexport const TMDB_REQUESTS = {\r\n    fetchTrending: \"/fetchTrending\",\r\n    fetchNetflixOriginals: \"/fetchNetflixOriginals\",\r\n    fetchTopRated: \"/fetchTopRated\",\r\n    fetchActionMovies: \"/fetchActionMovies\",\r\n    fetchComedyMovies: \"/fetchComedyMovies\",\r\n    fetchHorrorMovies: \"/fetchHorrorMovies\",\r\n    fetchRomanceMovies: \"/fetchRomanceMovies\",\r\n    fetchDocumentaries: \"/fetchDocumentaries\"\r\n};\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './Modal.css';\r\n\r\nconst Modal = ({ video, open, onClose }) => {\r\n\r\n    if(!open) return null;\r\n\r\n    const videoSrc = `https://www.youtube.com/embed/${video.id.videoId}?autoplay=1`;\r\n\r\n    return ReactDOM.createPortal(\r\n        <div className=\"modal\">\r\n            <div className=\"modal__icon\" onClick={onClose}>X</div>\r\n            <div className=\"modal__content\">\r\n                <iframe title=\"player\" src={videoSrc} frameBorder=\"0\"></iframe>\r\n            </div>\r\n        </div>,\r\n         document.querySelector(\"#modal\")\r\n    )\r\n};\r\n\r\nexport default Modal;\r\n","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nimport './Banner.css';\r\nimport Modal from '../Modal/Modal';\r\nimport { YOUTUBE_BASE_URL } from '../../api/requests';\r\n\r\nconst Banner = ({ fetchURL }) => {\r\n    const [movie, setMovies] = useState([]);\r\n    const [poster, setPoster] = useState('');\r\n    const [trailer, setTrailer] = useState(null);\r\n    const [isOpen, setIsOpen] = useState(false);\r\n\r\n    useEffect(() => {\r\n        async function fetchData(){\r\n            const response = await axios.get(fetchURL);\r\n            let selMovie = response.data[Math.floor(Math.random() * (response.data.length - 1))];\r\n            setMovies(selMovie);\r\n            setPoster(`url(https://image.tmdb.org/t/p/original/${selMovie?.backdrop_path})`);\r\n        }\r\n        fetchData();\r\n    },[fetchURL]);\r\n\r\n    const handleClick = async (movie) => {\r\n        let term = `${movie?.name || movie?.original_name || movie?.title} trailer`;\r\n        let response = await axios.get(YOUTUBE_BASE_URL + `/${term}`);\r\n        setTrailer(response.data[0]);\r\n        setIsOpen(true);\r\n    }\r\n\r\n\r\n    return (\r\n        <header className='banner' style={{ backgroundSize:'contain', backgroundImage:`${poster}`, backgroundPosition: 'center center'}}>\r\n            <div className='banner__contents'>\r\n                <h1>{ movie?.name || movie?.original_name || movie?.title }</h1>\r\n                <div className='banner__buttons'>\r\n                    <button className='banner__button' onClick={() => handleClick(movie)}>Play Trailer</button>\r\n                    <Modal open={isOpen} video={trailer} onClose={() => setIsOpen(false)} />\r\n                </div>\r\n                <div className='banner__description'>{movie.overview}</div>\r\n            </div>            \r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Banner;\r\n","import React, { useState, useRef, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nimport './Row.css';\r\nimport { YOUTUBE_BASE_URL } from '../../api/requests';\r\nimport Modal from '../Modal/Modal';\r\n\r\nconst base_url = 'https://image.tmdb.org/t/p/original/';\r\n\r\nconst Row = ({ title, fetchURL, isLargeRow }) => {\r\n    const [ movies, setMovies ] = useState([]);\r\n    const [ trailer, setTrailer ] = useState(null);\r\n    const [ isOpen, setIsOpen ] = useState(false);\r\n    const ref = useRef(null);\r\n\r\n    useEffect(() => {\r\n        async function fetchData(){\r\n            const response = await axios.get(fetchURL);\r\n            setMovies(response.data);\r\n        }\r\n\r\n        fetchData();\r\n\r\n    }, [fetchURL]);\r\n\r\n    const scroll = (offset) => {\r\n        ref.current.scrollLeft += offset;\r\n    }\r\n\r\n    const onVideoSearch = async(term) => {\r\n        let response = await axios.get(YOUTUBE_BASE_URL + `/${term}`);\r\n        setTrailer(response.data[0]);\r\n    }\r\n\r\n    const handleClick = (movie) => {\r\n        setTrailer('');\r\n        onVideoSearch(`${movie?.name || movie?.original_name || movie?.title} trailer`);\r\n        setIsOpen(true);\r\n    }\r\n\r\n    const renderMovieTiles = movies ? movies.map((movie) => {\r\n        return <img key={movie.id} className={`row__poster ${isLargeRow && \"row__posterLarge\"}`} \r\n                    src={`${base_url}${ isLargeRow ? movie?.poster_path : movie?.backdrop_path ? movie.backdrop_path : movie.poster_path}`} \r\n                    alt={movie?.name || movie?.original_name || movie?.title} onClick={() => handleClick(movie)}/> \r\n    }) : null;\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <h2>{title}</h2>\r\n            <div className='row__posters' ref={ref}>\r\n                <div className='row__arrow'>\r\n                    <i className='row__leftarrow' onClick={() => scroll(-500)}></i>\r\n                </div>\r\n                {renderMovieTiles}\r\n                <div className='row__arrow'>\r\n                    <i className='row__rightarrow' onClick={() => scroll(500)}></i>\r\n                </div>\r\n            </div>\r\n            {trailer && <Modal video={trailer} open={isOpen} onClose={() => setIsOpen(false)} />}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Row;\r\n","import React from 'react';\nimport LazyLoad from 'react-lazyload';\n\nimport './App.css';\nimport { TMDB_BASE_URL, TMDB_REQUESTS} from '../api/requests';\nimport Banner from '../components/Banner/Banner';\nimport Row from '../components/Row/Row';\n\nconst App = () => {\n  return (\n    <div className=\"app\">\n      <Banner fetchURL={TMDB_BASE_URL + TMDB_REQUESTS.fetchNetflixOriginals} />\n      <LazyLoad height={500}>\n        <Row title={'Netflix Originals'} fetchURL={TMDB_BASE_URL + TMDB_REQUESTS.fetchNetflixOriginals} isLargeRow />\n      </LazyLoad>\n      <LazyLoad height={500} offset={[-100, 0]}>\n        <Row title={'Trending'} fetchURL={TMDB_BASE_URL + TMDB_REQUESTS.fetchTrending} />\n      </LazyLoad>\n      <LazyLoad height={500} offset={[-100, 0]}>\n        <Row title={'Top Rated'} fetchURL={TMDB_BASE_URL + TMDB_REQUESTS.fetchTopRated} />\n      </LazyLoad>\n      <LazyLoad height={500} offset={[-100, 0]}>\n        <Row title={'Action Movies'} fetchURL={TMDB_BASE_URL + TMDB_REQUESTS.fetchActionMovies} />\n      </LazyLoad>\n      <LazyLoad height={500} offset={[-100, 0]}>\n        <Row title={'Comedy Movies'} fetchURL={TMDB_BASE_URL + TMDB_REQUESTS.fetchComedyMovies} />\n      </LazyLoad>\n      <LazyLoad height={500} offset={[-100, 0]}>\n        <Row title={'Horror Movies'} fetchURL={TMDB_BASE_URL + TMDB_REQUESTS.fetchHorrorMovies} />\n      </LazyLoad>\n      <LazyLoad height={500} offset={[-100, 0]}>\n        <Row title={'Romance Movies'} fetchURL={TMDB_BASE_URL + TMDB_REQUESTS.fetchRomanceMovies} />\n      </LazyLoad>\n      <LazyLoad height={500} offset={[-100, 0]}>\n        <Row title={'Documentaries'} fetchURL={TMDB_BASE_URL + TMDB_REQUESTS.fetchDocumentaries} />\n      </LazyLoad>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}